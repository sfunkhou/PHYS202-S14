
import numpy as np

def twoPtForwardDiff(x,y):
    """Evaluates the derivatives of y (array) with respect to
    the values of x (array), using the Forward Diffrentiation Formula"""
    
    dydx = np.zeros(y.shape, float)
    
    dydx[0:-1] = np.diff(y)/np.diff(x)
    dydx[-1] = (y[-1] - y[-2])/(x[-1] - x[-2])
    return dydx

def twoPtCenteredDiff(x,y):
    """Evaluates the derivatives of y (array) with respect to
    the values of x (array), using the Center Diffrentiation Formula"""
    
    dydx = np.zeros(y.shape,float)

    dydx[1:-1] = (y[2:] - y[:-2])/(x[2:] - x[:-2]) 
    
    dydx[0] = (y[1]-y[0])/(x[1]-x[0]) 
    
    dydx[-1] = (y[-1] - y[-2])/(x[-1] - x[-2]) 
    
    return dydx

def fourPtCenteredDiff(x,y):
    """This function differentiates the passed function y(x)
    using four terms in a center differencing algorithm.
    """
    dydx[2:-2] = (y[0:-4] - 8*y[1:-3] + 8*y[3:-1] - y[4:0])/(12*(x[1] - x[0]))
    
    dydx[1] = (y[-1] - 8*y[0] + 8*y[2] - y[3])/(12*(x[1] - x[0]))
    
    dydx[0] = (y[-2] - 8*y[-1] + 8*y[1] - y[2])/(12*(x[1] - x[0]))
    
    dydx[-2] = y[-4] - 8*y[-3] + 8*y[1] - y[0]/(12*(x[1] - x[0]))
    
    return dydx
